local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30)if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v70=v2(v0(v30,16));if v19 then local v78=v5(v70,v19);v19=nil;return v78;else return v70;end end end);local function v20(v31,v32,v33)if v33 then local v71=0;local v72;while true do if (v71==(0 -0)) then v72=(v31/(((11 -6) -3)^(v32-(1 + 0))))%(((5 -2) -1)^(((v33-(2 -1)) -(v32-(620 -(555 + 64)))) + (4 -3))) ;return v72-(v72%1) ;end end else local v73=931 -(857 + 74) ;local v74;while true do if (v73==(568 -(367 + 201))) then v74=(929 -((392 -178) + 713))^(v32-(1 + 0)) ;return (((v31%(v74 + v74))>=v74) and (1 + 0)) or ((350 -(87 + 263)) + 0) ;end end end end local function v21()local v34=180 -(67 + 113) ;local v35;while true do if (v34==(1 + 0)) then return v35;end if (v34==(0 -0)) then v35=v1(v16,v18,v18);v18=v18 + 1 + (0 -0) ;v34=1;end end end local function v22()local v36=0;local v37;local v38;while true do if (v36==(952 -(802 + 150))) then v37,v38=v1(v16,v18,v18 + (5 -3) );v18=v18 + (3 -(1 + 0)) ;v36=1 + 0 ;end if (v36==(998 -(915 + 82))) then return (v38 * (724 -468)) + v37 ;end end end local function v23()local v39,v40,v41,v42=v1(v16,v18,v18 + (3 -0) );v18=v18 + (1191 -(1069 + 118)) ;return (v42 * 16777216) + (v41 * (148681 -83145)) + (v40 * 256) + v39 ;end local function v24()local v43=0 -0 ;local v44;local v45;local v46;local v47;local v48;local v49;while true do if (v43==(1 + 2)) then if (v48==0) then if (v47==(0 -0)) then return v49 * (0 + (0 -0)) ;else v48=(43 + 749) -(368 + 150 + 273) ;v46=0;end elseif (v48==(6433 -4386)) then return ((v47==0) and (v49 * ((19 -(10 + 8))/(0 -0)))) or (v49 * NaN) ;end return v8(v49,v48-(1465 -((1301 -(261 + 624)) + 26)) ) * (v46 + (v47/(2^(165 -113)))) ;end if (v43==(1 + (0 -0))) then v46=(1081 -(1020 + 60)) -(1423 -(630 + 793)) ;v47=(v20(v45,439 -(145 + 293) ,450 -((149 -105) + (1827 -1441)) ) * ((1488 -(998 + 488))^32)) + v44 ;v43=1 + 1 ;end if (v43==(2 + 0)) then v48=v20(v45,793 -(201 + 571) ,(461 + 708) -(116 + 1022) );v49=((v20(v45,133 -(347 -246) )==(1 + 0)) and  -(3 -2)) or ((1750 -(760 + 987)) -2) ;v43=862 -(814 + 45) ;end if (v43==0) then v44=v23();v45=v23();v43=1;end end end local function v25(v50)local v51=1913 -(1789 + 124) ;local v52;local v53;while true do if (v51==(769 -(745 + 21))) then return v6(v53);end if ((1 + (1413 -(447 + 966)))==v51) then v52=v3(v16,v18,(v18 + v50) -(2 -1) );v18=v18 + v50 ;v51=7 -(13 -8) ;end if (v51==(0 + 0)) then v52=nil;if  not v50 then local v95=0 + 0 ;while true do if ((1055 -(87 + 968))==v95) then v50=v23();if (v50==(0 -0)) then return "";end break;end end end v51=1 + 0 ;end if (v51==(4 -2)) then v53={};for v79=1, #v52 do v53[v79]=v2(v1(v3(v52,v79,v79)));end v51=3;end end end local v26=v23;local function v27(...)return {...},v12("#",...);end local function v28()local v54=0 + 0 ;local v55;local v56;local v57;local v58;local v59;local v60;while true do local v68=0;local v69;while true do if (v68~=0) then else v69=1985 -(1266 + 719) ;while true do if ((603 -(268 + 335))==v69) then local v99=290 -(60 + 230) ;while true do if (v99==(573 -(426 + 146))) then v69=1 + 0 ;break;end if (v99==0) then if (v54~=1) then else v59=v23();v60={};for v109=1,v59 do local v110=1456 -(282 + 1174) ;local v111;local v112;local v113;while true do if (v110==(811 -(569 + 242))) then local v115=0;local v116;while true do if ((0 -0)~=v115) then else v116=0 + 0 ;while true do if (v116==(1024 -(706 + 318))) then local v265=1251 -(721 + 530) ;while true do if (v265==1) then v116=1;break;end if (v265~=(1271 -(945 + 326))) then else v111=0;v112=nil;v265=2 -1 ;end end end if (v116==(1 + 0)) then v110=1;break;end end break;end end end if (v110==(701 -(271 + 429))) then v113=nil;while true do if (v111~=1) then else if (v112==(1 + 0)) then v113=v21()~=0 ;elseif (v112==2) then v113=v24();elseif (v112~=3) then else v113=v25();end v60[v109]=v113;break;end if ((1500 -(1408 + 92))==v111) then local v206=0;local v207;while true do if (v206~=0) then else v207=1086 -(461 + 625) ;while true do if (v207~=1) then else v111=1;break;end if (v207==(1288 -(993 + 295))) then local v282=0 + 0 ;while true do if (v282==1) then v207=1172 -(418 + 753) ;break;end if (v282==(0 + 0)) then local v291=0;while true do if ((1 + 0)==v291) then v282=1 + 0 ;break;end if (v291==(0 + 0)) then v112=v21();v113=nil;v291=530 -(406 + 123) ;end end end end end end break;end end end end break;end end end v58[1772 -(1749 + 20) ]=v21();v54=1 + 1 ;end if (v54~=(1322 -(1249 + 73))) then else local v107=0;local v108;while true do if (v107==0) then v108=0 + 0 ;while true do if (v108~=1) then else local v172=1145 -(466 + 679) ;while true do if (v172~=1) then else v108=2;break;end if (v172==0) then v57={};v58={v55,v56,nil,v57};v172=1 + 0 ;end end end if ((1 + 1)~=v108) then else v54=2 -1 ;break;end if (v108==0) then local v173=0 -0 ;while true do if (v173==(114 -(4 + 110))) then v55={};v56={};v173=1;end if (v173==(585 -(57 + 527))) then v108=1;break;end end end end break;end end end v99=1428 -(41 + 1386) ;end end end if ((104 -(17 + 86))==v69) then if (v54==2) then local v104=0 + 0 ;local v105;while true do if (v104~=(0 -0)) then else v105=0;while true do local v114=0 -0 ;while true do if (v114==0) then if (v105==0) then local v174=0;while true do if (v174~=(166 -(122 + 44))) then else for v266=1 -0 ,v23() do local v267=0;local v268;local v269;while true do if (v267==(3 -2)) then while true do if (v268==0) then v269=v21();if (v20(v269,1,1 + 0 )~=(0 + 0)) then else local v295=0;local v296;local v297;local v298;local v299;local v300;while true do if (v295~=(0 -0)) then else v296=65 -(30 + 35) ;v297=nil;v295=1;end if (v295==1) then v298=nil;v299=nil;v295=2;end if (v295==(2 + 0)) then v300=nil;while true do if (v296==(1258 -(1043 + 214))) then v299=nil;v300=nil;v296=2;end if (v296~=2) then else while true do if (v297==2) then local v302=0 -0 ;while true do if (v302==(1212 -(323 + 889))) then if (v20(v299,2 -1 ,1)~=(581 -(361 + 219))) then else v300[2]=v60[v300[322 -(53 + 267) ]];end if (v20(v299,1 + 1 ,2)~=(414 -(15 + 398))) then else v300[3]=v60[v300[3]];end v302=983 -(18 + 964) ;end if (v302~=(3 -2)) then else v297=2 + 1 ;break;end end end if (v297~=(1 + 0)) then else v300={v22(),v22(),nil,nil};if (v298==0) then local v305=0;local v306;local v307;while true do if (0==v305) then v306=0;v307=nil;v305=1;end if (v305~=1) then else while true do if (v306==0) then v307=0;while true do if (v307==0) then v300[129 -(116 + 10) ]=v22();v300[4]=v22();break;end end break;end end break;end end elseif (v298==1) then v300[3]=v23();elseif (v298==2) then v300[1 + 2 ]=v23() -((740 -(542 + 196))^(34 -18)) ;elseif (v298~=(1 + 2)) then else local v316=0 + 0 ;local v317;local v318;while true do if (0==v316) then v317=0;v318=nil;v316=1;end if (v316==1) then while true do if (v317==(0 + 0)) then v318=0 -0 ;while true do if (v318==(0 -0)) then v300[1554 -(1126 + 425) ]=v23() -((407 -(118 + 287))^16) ;v300[15 -11 ]=v22();break;end end break;end end break;end end end v297=1123 -(118 + 1003) ;end if (v297==3) then if (v20(v299,3,3)~=(2 -1)) then else v300[4]=v60[v300[381 -(142 + 235) ]];end v55[v266]=v300;break;end if (v297==(0 -0)) then local v304=0;while true do if (v304==(0 + 0)) then v298=v20(v269,2,3);v299=v20(v269,981 -(553 + 424) ,6);v304=1;end if ((1 -0)~=v304) then else v297=1;break;end end end end break;end if (v296~=(0 + 0)) then else local v301=0;while true do if (v301==(1 + 0)) then v296=1 + 0 ;break;end if (v301~=(0 + 0)) then else v297=0 + 0 ;v298=nil;v301=2 -1 ;end end end end break;end end end break;end end break;end if (v267==0) then v268=0 -0 ;v269=nil;v267=2 -1 ;end end end for v270=1 + 0 ,v23() do v56[v270-(4 -3) ]=v28();end v174=754 -(239 + 514) ;end if (v174==1) then v105=1 + 0 ;break;end end end if (1~=v105) then else return v58;end break;end end end break;end end end break;end end break;end end end end local function v29(v61,v62,v63)local v64=0;local v65;local v66;local v67;while true do if (v64==0) then v65=v61[1];v66=v61[2];v64=1;end if (v64==1) then v67=v61[3];return function(...)local v81=v65;local v82=v66;local v83=v67;local v84=v27;local v85=1;local v86= -1;local v87={};local v88={...};local v89=v12("#",...) -1 ;local v90={};local v91={};for v96=0,v89 do if (v96>=v83) then v87[v96-v83 ]=v88[v96 + 1 ];else v91[v96]=v88[v96 + 1 ];end end local v92=(v89-v83) + 1 ;local v93;local v94;while true do v93=v81[v85];v94=v93[1];if (v94<=35) then if (v94<=17) then if (v94<=8) then if (v94<=3) then if (v94<=1) then if (v94==0) then v91[v93[2]]=v93[3];elseif (v93[2]<v91[v93[4]]) then v85=v93[3];else v85=v85 + 1 ;end elseif (v94==2) then if (v93[2]<=v91[v93[4]]) then v85=v85 + 1 ;else v85=v93[3];end elseif (v91[v93[2]]~=v93[4]) then v85=v85 + 1 ;else v85=v93[3];end elseif (v94<=5) then if (v94>4) then v91[v93[2]]=v29(v82[v93[3]],nil,v63);else v91[v93[2]]=v91[v93[3]] + v91[v93[4]] ;end elseif (v94<=6) then if (v91[v93[2]]<v93[4]) then v85=v85 + 1 ;else v85=v93[3];end elseif (v94>7) then local v212=0;while true do if (v212==0) then v91[v93[2]]=v93[3]~=0 ;v85=v85 + 1 ;break;end end elseif  not v91[v93[2]] then v85=v85 + 1 ;else v85=v93[3];end elseif (v94<=12) then if (v94<=10) then if (v94==9) then v91[v93[2]]=v29(v82[v93[3]],nil,v63);else v91[v93[2]]=v91[v93[3]][v93[4]];end elseif (v94>11) then if (v91[v93[2]]==v93[4]) then v85=v85 + 1 ;else v85=v93[3];end else do return;end end elseif (v94<=14) then if (v94==13) then v91[v93[2]]=v93[3]~=0 ;else local v125=v93[2];v91[v125]=v91[v125](v13(v91,v125 + 1 ,v93[3]));end elseif (v94<=15) then local v127=v93[2];local v128={};for v175=1, #v90 do local v176=0;local v177;while true do if (v176==0) then v177=v90[v175];for v273=0, #v177 do local v274=v177[v273];local v275=v274[1];local v276=v274[2];if ((v275==v91) and (v276>=v127)) then local v281=0;while true do if (v281==0) then v128[v276]=v275[v276];v274[1]=v128;break;end end end end break;end end end elseif (v94==16) then if v91[v93[2]] then v85=v85 + 1 ;else v85=v93[3];end else v91[v93[2]]=v93[3]~=0 ;end elseif (v94<=26) then if (v94<=21) then if (v94<=19) then if (v94==18) then v63[v93[3]]=v91[v93[2]];else v85=v93[3];end elseif (v94==20) then if (v91[v93[2]]~=v93[4]) then v85=v85 + 1 ;else v85=v93[3];end else v91[v93[2]]=v91[v93[3]][v93[4]];end elseif (v94<=23) then if (v94==22) then if ((v93[3]=="_ENV") or (v93[3]=="getfenv")) then v91[v93[2]]=v63;else v91[v93[2]]=v63[v93[3]];end elseif (v93[2]==v91[v93[4]]) then v85=v85 + 1 ;else v85=v93[3];end elseif (v94<=24) then v91[v93[2]][v93[3]]=v91[v93[4]];elseif (v94>25) then if (v93[2]<=v91[v93[4]]) then v85=v85 + 1 ;else v85=v93[3];end else v91[v93[2]][v93[3]]=v91[v93[4]];end elseif (v94<=30) then if (v94<=28) then if (v94>27) then v91[v93[2]][v93[3]]=v93[4];else local v138=0;local v139;while true do if (v138==0) then v139=v93[2];v91[v139](v91[v139 + 1 ]);break;end end end elseif (v94>29) then if (v93[2]<v91[v93[4]]) then v85=v85 + 1 ;else v85=v93[3];end elseif (v93[2]<v91[v93[4]]) then v85=v85 + 1 ;else v85=v93[3];end elseif (v94<=32) then if (v94>31) then if (v93[2]==v91[v93[4]]) then v85=v85 + 1 ;else v85=v93[3];end else v62[v93[3]]=v91[v93[2]];end elseif (v94<=33) then local v142=v82[v93[3]];local v143;local v144={};v143=v10({},{__index=function(v178,v179)local v180=v144[v179];return v180[1][v180[2]];end,__newindex=function(v181,v182,v183)local v184=0;local v185;while true do if (0==v184) then v185=v144[v182];v185[1][v185[2]]=v183;break;end end end});for v186=1,v93[4] do v85=v85 + 1 ;local v187=v81[v85];if (v187[1]==61) then v144[v186-1 ]={v91,v187[3]};else v144[v186-1 ]={v62,v187[3]};end v90[ #v90 + 1 ]=v144;end v91[v93[2]]=v29(v142,v143,v63);elseif (v94>34) then v91[v93[2]][v93[3]]=v93[4];elseif (v91[v93[2]]==v93[4]) then v85=v85 + 1 ;else v85=v93[3];end elseif (v94<=53) then if (v94<=44) then if (v94<=39) then if (v94<=37) then if (v94>36) then v91[v93[2]]= not v91[v93[3]];else v91[v93[2]]=v93[3];end elseif (v94==38) then if (v93[2]<v91[v93[4]]) then v85=v93[3];else v85=v85 + 1 ;end else local v149=v93[2];v91[v149](v91[v149 + 1 ]);end elseif (v94<=41) then if (v94>40) then v91[v93[2]]=v93[3]~=0 ;v85=v85 + 1 ;else v91[v93[2]]=v62[v93[3]];end elseif (v94<=42) then v91[v93[2]]={};elseif (v94==43) then local v228=v93[2];v91[v228]=v91[v228]();elseif (v91[v93[2]]~=v91[v93[4]]) then v85=v85 + 1 ;else v85=v93[3];end elseif (v94<=48) then if (v94<=46) then if (v94>45) then local v154=0;local v155;while true do if (0==v154) then v155=v93[2];v91[v155](v13(v91,v155 + 1 ,v93[3]));break;end end elseif  not v91[v93[2]] then v85=v85 + 1 ;else v85=v93[3];end elseif (v94>47) then local v156=v93[2];do return v13(v91,v156,v156 + v93[3] );end else local v157=v82[v93[3]];local v158;local v159={};v158=v10({},{__index=function(v189,v190)local v191=0;local v192;while true do if (v191==0) then v192=v159[v190];return v192[1][v192[2]];end end end,__newindex=function(v193,v194,v195)local v196=v159[v194];v196[1][v196[2]]=v195;end});for v198=1,v93[4] do v85=v85 + 1 ;local v199=v81[v85];if (v199[1]==61) then v159[v198-1 ]={v91,v199[3]};else v159[v198-1 ]={v62,v199[3]};end v90[ #v90 + 1 ]=v159;end v91[v93[2]]=v29(v157,v158,v63);end elseif (v94<=50) then if (v94>49) then for v201=v93[2],v93[3] do v91[v201]=nil;end else local v161=0;local v162;while true do if (v161==0) then v162=v93[2];v91[v162]=v91[v162](v13(v91,v162 + 1 ,v93[3]));break;end end end elseif (v94<=51) then if v91[v93[2]] then v85=v85 + 1 ;else v85=v93[3];end elseif (v94>52) then v91[v93[2]]();else local v232=0;local v233;local v234;while true do if (v232==1) then for v278=1, #v90 do local v279=0;local v280;while true do if (v279==0) then v280=v90[v278];for v287=0, #v280 do local v288=v280[v287];local v289=v288[1];local v290=v288[2];if ((v289==v91) and (v290>=v233)) then v234[v290]=v289[v290];v288[1]=v234;end end break;end end end break;end if (v232==0) then v233=v93[2];v234={};v232=1;end end end elseif (v94<=62) then if (v94<=57) then if (v94<=55) then if (v94>54) then v63[v93[3]]=v91[v93[2]];else v62[v93[3]]=v91[v93[2]];end elseif (v94==56) then do return v91[v93[2]];end else for v203=v93[2],v93[3] do v91[v203]=nil;end end elseif (v94<=59) then if (v94==58) then v91[v93[2]]={};elseif (v91[v93[2]]<v93[4]) then v85=v85 + 1 ;else v85=v93[3];end elseif (v94<=60) then if (v91[v93[2]]~=v91[v93[4]]) then v85=v85 + 1 ;else v85=v93[3];end elseif (v94>61) then v91[v93[2]]=v91[v93[3]] + v91[v93[4]] ;else v91[v93[2]]=v91[v93[3]];end elseif (v94<=67) then if (v94<=64) then if (v94>63) then v85=v93[3];else local v169=v93[2];v91[v169](v13(v91,v169 + 1 ,v93[3]));end elseif (v94<=65) then v91[v93[2]]=v91[v93[3]];elseif (v94>66) then do return;end else local v240=v93[2];v91[v240]=v91[v240]();end elseif (v94<=69) then if (v94==68) then if ((v93[3]=="_ENV") or (v93[3]=="getfenv")) then v91[v93[2]]=v63;else v91[v93[2]]=v63[v93[3]];end else do return v91[v93[2]];end end elseif (v94<=70) then v91[v93[2]]();elseif (v94==71) then v91[v93[2]]=v62[v93[3]];else v91[v93[2]]= not v91[v93[3]];end v85=v85 + 1 ;end end;end end end return v29(v28(),{},v17)(...);end vv9(),...);