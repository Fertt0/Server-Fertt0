local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v80=0;local v81;while true do if (v80==0) then v81=v2(v0(v30,16));if v19 then local v111=v5(v81,v19);v19=nil;return v111;else return v81;end break;end end end end);local function v20(v31,v32,v33) if v33 then local v82=(1065 -(68 + 997)) -0 ;local v83;while true do if (v82==(0 -0)) then v83=(v31/((3 -1)^(v32-(2 -1))))%((621 -(555 + (1334 -(226 + 1044))))^(((v33-((4058 -3126) -(857 + (191 -(32 + 85))))) -(v32-(569 -(367 + 201)))) + (928 -(214 + 713)))) ;return v83-(v83%1) ;end end else local v84=0 + 0 ;local v85;while true do if (v84==(0 + 0 + 0)) then v85=(879 -(282 + 595))^(v32-(1638 -(1523 + 114))) ;return (((v31%(v85 + v85))>=v85) and (1 + 0)) or (0 -0) ;end end end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + 1 + 1 );v18=v18 + (959 -(892 + 65)) ;return (v36 * (610 -354)) + v35 ;end local function v23() local v37,v38,v39,v40=v1(v16,v18,v18 + (5 -2) );v18=v18 + ((16 -9) -3) ;return (v40 * (16777566 -(87 + 263))) + (v39 * (65716 -(67 + 113))) + (v38 * (188 + 68)) + v37 ;end local function v24() local v41=0 + 0 ;local v42;local v43;local v44;local v45;local v46;local v47;while true do if (v41==1) then v44=3 -2 ;v45=(v20(v43,953 -(802 + 150) ,53 -(463 -(44 + 386)) ) * (2^(57 -25))) + v42 ;v41=2 + 0 ;end if ((999 -(915 + 82))==v41) then v46=v20(v43,59 -38 ,19 + 12 );v47=((v20(v43,41 -9 )==(1188 -(1069 + 118))) and  -(2 -(1487 -(998 + 488)))) or ((1 + 0) -0) ;v41=1 + 2 ;end if (v41==(0 -0)) then v42=v23();v43=v23();v41=1 + 0 ;end if (v41==(3 + 0)) then if (v46==(791 -(368 + 423))) then if (v45==(0 -0)) then return v47 * (18 -(10 + 8)) ;else v46=3 -2 ;v44=0;end elseif (v46==(2489 -(416 + 26))) then return ((v45==(0 -0)) and (v47 * ((439 -(145 + 293))/(0 + 0)))) or (v47 * NaN) ;end return v8(v47,v46-(1809 -786) ) * (v44 + (v45/(2^52))) ;end end end local function v25(v48) local v49;if  not v48 then v48=v23();if (v48==(1138 -(116 + 1022))) then return "";end end v49=v3(v16,v18,(v18 + v48) -(773 -(201 + 571)) );v18=v18 + v48 ;local v50={};for v64=1 + 0 , #v49 do v50[v64]=v2(v1(v3(v49,v64,v64)));end return v6(v50);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v51=1721 -(345 + 1376) ;local v52;local v53;local v54;local v55;local v56;local v57;while true do if (v51==1) then v56=v23();v57={};for v91=1,v56 do local v92=688 -(198 + 490) ;local v93;local v94;local v95;while true do if (v92~=0) then else local v112=0 -0 ;while true do if (v112==(0 -0)) then v93=1206 -(696 + 510) ;v94=nil;v112=1 -0 ;end if (v112==1) then v92=1263 -(1091 + 171) ;break;end end end if (v92==1) then v95=nil;while true do if (v93~=(0 + 0)) then else local v115=0 -0 ;while true do if (v115==(3 -2)) then v93=1;break;end if (v115~=0) then else v94=v21();v95=nil;v115=1;end end end if (v93==1) then if (v94==(375 -(123 + 251))) then v95=v21()~=0 ;elseif (v94==2) then v95=v24();elseif (v94~=(14 -11)) then else v95=v25();end v57[v91]=v95;break;end end break;end end end v55[701 -(208 + 490) ]=v21();v51=2;end if (2~=v51) then else for v96=1 + 0 ,v23() do local v97=v21();if (v20(v97,1,1 + 0 )==(836 -(660 + 176))) then local v106=0 + 0 ;local v107;local v108;local v109;local v110;while true do if (v106~=(202 -(14 + 188))) then else local v113=0;while true do if (v113==(675 -(534 + 141))) then v107=0 + 0 ;v108=nil;v113=1;end if (v113==(1 + 0)) then v106=1;break;end end end if (v106==(1 + 0)) then local v114=0 -0 ;while true do if (v114==0) then v109=nil;v110=nil;v114=1 -0 ;end if (v114~=(2 -1)) then else v106=2;break;end end end if (v106==2) then while true do if (v107==(2 + 0)) then local v117=0;local v118;while true do if (v117~=(0 + 0)) then else v118=0;while true do if (0~=v118) then else if (v20(v109,397 -(115 + 281) ,2 -1 )==1) then v110[2 + 0 ]=v57[v110[4 -2 ]];end if (v20(v109,7 -5 ,2)==1) then v110[3]=v57[v110[3]];end v118=1;end if (v118==(868 -(550 + 317))) then v107=3;break;end end break;end end end if (v107==0) then local v119=0 -0 ;local v120;while true do if (v119==0) then v120=0;while true do if (v120~=(1 -0)) then else v107=2 -1 ;break;end if (v120==(285 -(134 + 151))) then v108=v20(v97,1667 -(970 + 695) ,5 -2 );v109=v20(v97,1994 -(582 + 1408) ,20 -14 );v120=1;end end break;end end end if (v107==3) then if (v20(v109,3 -0 ,11 -8 )==1) then v110[1828 -(1195 + 629) ]=v57[v110[5 -1 ]];end v52[v96]=v110;break;end if (v107==1) then local v122=0;local v123;while true do if (v122~=(241 -(187 + 54))) then else v123=780 -(162 + 618) ;while true do if (v123==(1 + 0)) then v107=2 + 0 ;break;end if (v123==0) then v110={v22(),v22(),nil,nil};if (v108==(0 + 0)) then local v364=1636 -(1373 + 263) ;local v365;while true do if (v364==(1000 -(451 + 549))) then v365=0;while true do if (v365~=0) then else v110[3]=v22();v110[4]=v22();break;end end break;end end elseif (v108==(1 + 0)) then v110[3]=v23();elseif (v108==2) then v110[3]=v23() -((2 -0)^16) ;elseif (v108==3) then local v549=0;while true do if (v549~=0) then else v110[4 -1 ]=v23() -(2^(1400 -(746 + 638))) ;v110[2 + 2 ]=v22();break;end end end v123=1;end end break;end end end end break;end end end end for v98=1 -0 ,v23() do v53[v98-(342 -(218 + 123)) ]=v28();end return v55;end if ((1581 -(1535 + 46))==v51) then local v89=0;local v90;while true do if (0==v89) then v90=0;while true do if (v90~=(0 + 0)) then else v52={};v53={};v90=1;end if (v90~=1) then else v54={};v55={v52,v53,nil,v54};v90=3 -1 ;end if (v90~=(1469 -(899 + 568))) then else v51=1 + 0 ;break;end end break;end end end end end local function v29(v58,v59,v60) local v61=v58[1];local v62=v58[2];local v63=v58[3];return function(...) local v66=v61;local v67=v62;local v68=v63;local v69=v27;local v70=1;local v71= -1;local v72={};local v73={...};local v74=v12("#",...) -1 ;local v75={};local v76={};for v86=0,v74 do if (v86>=v68) then v72[v86-v68 ]=v73[v86 + 1 ];else v76[v86]=v73[v86 + 1 ];end end local v77=(v74-v68) + 1 ;local v78;local v79;while true do local v87=0;while true do if (v87==1) then if (v79<=33) then if (v79<=16) then if (v79<=7) then if (v79<=3) then if (v79<=1) then if (v79==0) then v59[v78[3]]=v76[v78[2]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3]~=0 ;v70=v70 + 1 ;v78=v66[v70];v59[v78[3]]=v76[v78[2]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v70=v78[3];else local v130=0;local v131;while true do if (v130==0) then v131=v78[2];do return v13(v76,v131,v131 + v78[3] );end break;end end end elseif (v79>2) then v70=v78[3];else v76[v78[2]]=v59[v78[3]];end elseif (v79<=5) then if (v79>4) then v76[v78[2]]=v76[v78[3]];else local v137=0;while true do if (v137==6) then v76[v78[2]]=v60[v78[3]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];break;end if (v137==3) then v76[v78[2]]=v78[3]~=0 ;v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v137=4;end if (v137==4) then v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3]~=0 ;v70=v70 + 1 ;v137=5;end if (v137==1) then v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v137=2;end if (v137==5) then v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v137=6;end if (v137==2) then v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v137=3;end if (v137==0) then v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3]~=0 ;v137=1;end end end elseif (v79>6) then if (v76[v78[2]]<v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end else v76[v78[2]]=v78[3]~=0 ;end elseif (v79<=11) then if (v79<=9) then if (v79>8) then for v315=v78[2],v78[3] do v76[v315]=nil;end else local v139;local v140;local v141;v76[v78[2]]=v76[v78[3]][v78[4]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v59[v78[3]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v76[v78[3]]/v78[4] ;v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v76[v78[3]]/v76[v78[4]] ;v70=v70 + 1 ;v78=v66[v70];v141=v78[2];v76[v141]=v76[v141](v76[v141 + 1 ]);v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3] -v76[v78[4]] ;v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v59[v78[3]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]= #v76[v78[3]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v141=v78[2];v140=v76[v141];v139=v76[v141 + 2 ];if (v139>0) then if (v140>v76[v141 + 1 ]) then v70=v78[3];else v76[v141 + 3 ]=v140;end elseif (v140<v76[v141 + 1 ]) then v70=v78[3];else v76[v141 + 3 ]=v140;end end elseif (v79>10) then if v76[v78[2]] then v70=v70 + 1 ;else v70=v78[3];end else local v150=0;local v151;local v152;local v153;while true do if (v150==0) then v151=v78[2];v152=v76[v151];v150=1;end if (v150==1) then v153=v78[3];for v484=1,v153 do v152[v484]=v76[v151 + v484 ];end break;end end end elseif (v79<=13) then if (v79>12) then v59[v78[3]]=v76[v78[2]];else local v156;v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v156=v78[2];v76[v156]=v76[v156](v13(v76,v156 + 1 ,v78[3]));v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v60[v78[3]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v156=v78[2];v76[v156]=v76[v156](v13(v76,v156 + 1 ,v78[3]));v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v60[v78[3]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];end elseif (v79<=14) then v76[v78[2]]=v76[v78[3]] * v76[v78[4]] ;elseif (v79>15) then local v328=v78[2];v76[v328]=v76[v328](v76[v328 + 1 ]);else local v330=0;local v331;while true do if (0==v330) then v331=v78[2];v76[v331](v13(v76,v331 + 1 ,v78[3]));break;end end end elseif (v79<=24) then if (v79<=20) then if (v79<=18) then if (v79==17) then v76[v78[2]]=v76[v78[3]] * v76[v78[4]] ;v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3] * v76[v78[4]] ;v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3] -v76[v78[4]] ;v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v76[v78[3]] * v76[v78[4]] ;v70=v70 + 1 ;v78=v66[v70];do return v76[v78[2]];end v70=v70 + 1 ;v78=v66[v70];do return;end else local v166=0;local v167;local v168;local v169;while true do if (v166==3) then v76[v78[2]]=v59[v78[3]];v70=v70 + 1 ;v78=v66[v70];v166=4;end if (v166==2) then v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v166=3;end if (6==v166) then v169=v78[2];v168=v76[v169];v167=v76[v169 + 2 ];v166=7;end if (v166==4) then v76[v78[2]]= #v76[v78[3]];v70=v70 + 1 ;v78=v66[v70];v166=5;end if (v166==7) then if (v167>0) then if (v168>v76[v169 + 1 ]) then v70=v78[3];else v76[v169 + 3 ]=v168;end elseif (v168<v76[v169 + 1 ]) then v70=v78[3];else v76[v169 + 3 ]=v168;end break;end if (v166==0) then v167=nil;v168=nil;v169=nil;v166=1;end if (v166==1) then v59[v78[3]]=v76[v78[2]];v70=v70 + 1 ;v78=v66[v70];v166=2;end if (5==v166) then v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v166=6;end end end elseif (v79>19) then v76[v78[2]]=v76[v78[3]] -v78[4] ;else local v171;local v172;local v173;v76[v78[2]]=v76[v78[3]][v78[4]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v59[v78[3]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v76[v78[3]]/v78[4] ;v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v76[v78[3]]/v76[v78[4]] ;v70=v70 + 1 ;v78=v66[v70];v173=v78[2];v76[v173]=v76[v173](v76[v173 + 1 ]);v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v76[v78[3]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v59[v78[3]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]= #v76[v78[3]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v173=v78[2];v172=v76[v173];v171=v76[v173 + 2 ];if (v171>0) then if (v172>v76[v173 + 1 ]) then v70=v78[3];else v76[v173 + 3 ]=v172;end elseif (v172<v76[v173 + 1 ]) then v70=v78[3];else v76[v173 + 3 ]=v172;end end elseif (v79<=22) then if (v79==21) then local v183=v78[2];v76[v183]=v76[v183](v13(v76,v183 + 1 ,v78[3]));else local v185=0;local v186;local v187;while true do if (v185==9) then v70=v70 + 1 ;v78=v66[v70];do return;end break;end if (v185==5) then v70=v70 + 1 ;v78=v66[v70];v187=v78[2];v76[v187]=v76[v187](v13(v76,v187 + 1 ,v78[3]));v70=v70 + 1 ;v185=6;end if (v185==8) then v76[v78[2]]=v76[v78[3]];v70=v70 + 1 ;v78=v66[v70];v187=v78[2];v76[v187](v13(v76,v187 + 1 ,v78[3]));v185=9;end if (v185==2) then v78=v66[v70];v187=v78[2];v76[v187]=v76[v187](v76[v187 + 1 ]);v70=v70 + 1 ;v78=v66[v70];v185=3;end if (v185==7) then v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v185=8;end if (v185==4) then v78=v66[v70];v76[v78[2]]=v59[v78[3]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v76[v78[3]][v76[v78[4]]];v185=5;end if (v185==6) then v78=v66[v70];v187=v78[2];v186=v76[v78[3]];v76[v187 + 1 ]=v186;v76[v187]=v186[v78[4]];v185=7;end if (v185==3) then v187=v78[2];v186=v76[v78[3]];v76[v187 + 1 ]=v186;v76[v187]=v186[v78[4]];v70=v70 + 1 ;v185=4;end if (v185==0) then v186=nil;v187=nil;v76[v78[2]]=v60[v78[3]];v70=v70 + 1 ;v78=v66[v70];v185=1;end if (1==v185) then v76[v78[2]]=v76[v78[3]][v78[4]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v185=2;end end end elseif (v79>23) then if (v76[v78[2]]<=v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end else v76[v78[2]][v78[3]]=v76[v78[4]];end elseif (v79<=28) then if (v79<=26) then if (v79>25) then local v190;local v191,v192;local v193;v76[v78[2]]=v76[v78[3]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v60[v78[3]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v193=v78[2];v191,v192=v69(v76[v193](v13(v76,v193 + 1 ,v78[3])));v71=(v192 + v193) -1 ;v190=0;for v317=v193,v71 do local v318=0;while true do if (v318==0) then v190=v190 + 1 ;v76[v317]=v191[v190];break;end end end v70=v70 + 1 ;v78=v66[v70];v193=v78[2];v76[v193](v13(v76,v193 + 1 ,v71));else local v200;v76[v78[2]]=v59[v78[3]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v76[v78[3]]/v76[v78[4]] ;v70=v70 + 1 ;v78=v66[v70];v200=v78[2];v76[v200]=v76[v200](v76[v200 + 1 ]);v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v76[v78[3]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v59[v78[3]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v59[v78[3]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v59[v78[3]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v76[v78[3]];v70=v70 + 1 ;v78=v66[v70];v200=v78[2];v76[v200]=v76[v200](v13(v76,v200 + 1 ,v78[3]));v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v76[v78[3]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];end elseif (v79==27) then v76[v78[2]]= #v76[v78[3]];else local v209=v78[2];local v210=v76[v209];local v211=v76[v209 + 2 ];if (v211>0) then if (v210>v76[v209 + 1 ]) then v70=v78[3];else v76[v209 + 3 ]=v210;end elseif (v210<v76[v209 + 1 ]) then v70=v78[3];else v76[v209 + 3 ]=v210;end end elseif (v79<=30) then if (v79>29) then v76[v78[2]]=v76[v78[3]] -v76[v78[4]] ;else do return v76[v78[2]];end end elseif (v79<=31) then if (v78[2]==v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79==32) then local v334;local v335;local v336;v76[v78[2]]=v76[v78[3]][v78[4]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v59[v78[3]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v76[v78[3]]/v78[4] ;v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v76[v78[3]]/v76[v78[4]] ;v70=v70 + 1 ;v78=v66[v70];v336=v78[2];v76[v336]=v76[v336](v76[v336 + 1 ]);v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v76[v78[3]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v59[v78[3]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]= #v76[v78[3]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v336=v78[2];v335=v76[v336];v334=v76[v336 + 2 ];if (v334>0) then if (v335>v76[v336 + 1 ]) then v70=v78[3];else v76[v336 + 3 ]=v335;end elseif (v335<v76[v336 + 1 ]) then v70=v78[3];else v76[v336 + 3 ]=v335;end else do return;end end elseif (v79<=50) then if (v79<=41) then if (v79<=37) then if (v79<=35) then if (v79>34) then v76[v78[2]]=v60[v78[3]];else local v215;local v216,v217;local v218;v76[v78[2]]=v76[v78[3]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v60[v78[3]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v218=v78[2];v216,v217=v69(v76[v218](v13(v76,v218 + 1 ,v78[3])));v71=(v217 + v218) -1 ;v215=0;for v319=v218,v71 do v215=v215 + 1 ;v76[v319]=v216[v215];end v70=v70 + 1 ;v78=v66[v70];v218=v78[2];v76[v218](v13(v76,v218 + 1 ,v71));end elseif (v79>36) then local v225=0;local v226;local v227;while true do if (v225==1) then for v497=1, #v75 do local v498=v75[v497];for v529=0, #v498 do local v530=v498[v529];local v531=v530[1];local v532=v530[2];if ((v531==v76) and (v532>=v226)) then v227[v532]=v531[v532];v530[1]=v227;end end end break;end if (v225==0) then v226=v78[2];v227={};v225=1;end end else v59[v78[3]]=v76[v78[2]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3]~=0 ;v70=v70 + 1 ;v78=v66[v70];v59[v78[3]]=v76[v78[2]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v70=v78[3];end elseif (v79<=39) then if (v79==38) then v76[v78[2]]=v29(v67[v78[3]],nil,v60);elseif (v76[v78[2]]<v78[4]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79==40) then local v233=0;local v234;local v235;local v236;local v237;while true do if (v233==7) then v234=0;for v499=v237,v71 do v234=v234 + 1 ;v76[v499]=v235[v234];end v70=v70 + 1 ;v233=8;end if (v233==1) then v76[v78[2]]=v76[v78[3]];v70=v70 + 1 ;v78=v66[v70];v233=2;end if (v233==0) then v234=nil;v235,v236=nil;v237=nil;v233=1;end if (v233==5) then v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v233=6;end if (v233==3) then v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v233=4;end if (v233==2) then v76[v78[2]]=v60[v78[3]];v70=v70 + 1 ;v78=v66[v70];v233=3;end if (8==v233) then v78=v66[v70];v237=v78[2];v76[v237](v13(v76,v237 + 1 ,v71));break;end if (v233==6) then v237=v78[2];v235,v236=v69(v76[v237](v13(v76,v237 + 1 ,v78[3])));v71=(v236 + v237) -1 ;v233=7;end if (v233==4) then v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v233=5;end end else local v238=v78[2];local v239=v76[v238];for v322=v238 + 1 ,v78[3] do v7(v239,v76[v322]);end end elseif (v79<=45) then if (v79<=43) then if (v79>42) then local v240;v76[v78[2]]=v59[v78[3]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v76[v78[3]]/v76[v78[4]] ;v70=v70 + 1 ;v78=v66[v70];v240=v78[2];v76[v240]=v76[v240](v76[v240 + 1 ]);v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v76[v78[3]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v59[v78[3]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v59[v78[3]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v59[v78[3]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v76[v78[3]];v70=v70 + 1 ;v78=v66[v70];v240=v78[2];v76[v240]=v76[v240](v13(v76,v240 + 1 ,v78[3]));v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v76[v78[3]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];else v76[v78[2]]=v76[v78[3]] + v76[v78[4]] ;v70=v70 + 1 ;v78=v66[v70];v59[v78[3]]=v76[v78[2]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v59[v78[3]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v76[v78[3]]/v78[4] ;v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v70=v78[3];end elseif (v79>44) then if  not v76[v78[2]] then v70=v70 + 1 ;else v70=v78[3];end else local v252=0;local v253;local v254;local v255;local v256;while true do if (v252==2) then for v502=v253,v71 do v256=v256 + 1 ;v76[v502]=v254[v256];end break;end if (v252==1) then v71=(v255 + v253) -1 ;v256=0;v252=2;end if (0==v252) then v253=v78[2];v254,v255=v69(v76[v253](v13(v76,v253 + 1 ,v78[3])));v252=1;end end end elseif (v79<=47) then if (v79>46) then local v257=0;local v258;local v259;local v260;while true do if (v257==0) then v258=nil;v259=nil;v260=nil;v76[v78[2]]={};v257=1;end if (v257==4) then v70=v70 + 1 ;v78=v66[v70];v260=v78[2];v259=v76[v260];v257=5;end if (2==v257) then v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v257=3;end if (v257==5) then v258=v78[3];for v505=1,v258 do v259[v505]=v76[v260 + v505 ];end break;end if (v257==3) then v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v257=4;end if (v257==1) then v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v257=2;end end else local v261;local v262;local v263;v59[v78[3]]=v76[v78[2]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v59[v78[3]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]= #v76[v78[3]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v263=v78[2];v262=v76[v263];v261=v76[v263 + 2 ];if (v261>0) then if (v262>v76[v263 + 1 ]) then v70=v78[3];else v76[v263 + 3 ]=v262;end elseif (v262<v76[v263 + 1 ]) then v70=v78[3];else v76[v263 + 3 ]=v262;end end elseif (v79<=48) then if (v76[v78[2]]==v78[4]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79>49) then local v349=v78[2];local v350=v76[v78[3]];v76[v349 + 1 ]=v350;v76[v349]=v350[v78[4]];else v60[v78[3]]=v76[v78[2]];end elseif (v79<=58) then if (v79<=54) then if (v79<=52) then if (v79>51) then v76[v78[2]]=v78[3];else local v273=v78[2];v76[v273](v13(v76,v273 + 1 ,v71));end elseif (v79==53) then v76[v78[2]]={};else local v275=v78[2];local v276=v76[v275 + 2 ];local v277=v76[v275] + v276 ;v76[v275]=v277;if (v276>0) then if (v277<=v76[v275 + 1 ]) then v70=v78[3];v76[v275 + 3 ]=v277;end elseif (v277>=v76[v275 + 1 ]) then v70=v78[3];v76[v275 + 3 ]=v277;end end elseif (v79<=56) then if (v79>55) then v76[v78[2]]=v78[3] -v76[v78[4]] ;else v76[v78[2]]=v76[v78[3]][v76[v78[4]]];end elseif (v79==57) then local v282=0;local v283;local v284;local v285;while true do if (0==v282) then v283=v67[v78[3]];v284=nil;v282=1;end if (v282==1) then v285={};v284=v10({},{__index=function(v516,v517) local v518=v285[v517];return v518[1][v518[2]];end,__newindex=function(v519,v520,v521) local v522=v285[v520];v522[1][v522[2]]=v521;end});v282=2;end if (v282==2) then for v524=1,v78[4] do local v525=0;local v526;while true do if (0==v525) then v70=v70 + 1 ;v526=v66[v70];v525=1;end if (v525==1) then if (v526[1]==5) then v285[v524-1 ]={v76,v526[3]};else v285[v524-1 ]={v59,v526[3]};end v75[ #v75 + 1 ]=v285;break;end end end v76[v78[2]]=v29(v283,v284,v60);break;end end else v76[v78[2]]=v76[v78[3]]/v76[v78[4]] ;end elseif (v79<=62) then if (v79<=60) then if (v79==59) then v59[v78[3]]=v76[v78[2]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v59[v78[3]]=v76[v78[2]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v70=v78[3];else v76[v78[2]]=v76[v78[3]] + v76[v78[4]] ;v70=v70 + 1 ;v78=v66[v70];v60[v78[3]]=v76[v78[2]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v60[v78[3]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v59[v78[3]];v70=v70 + 1 ;v78=v66[v70];if (v76[v78[2]]<v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end end elseif (v79==61) then local v295;v76[v78[2]]=v76[v78[3]] -v76[v78[4]] ;v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v59[v78[3]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v76[v78[3]];v70=v70 + 1 ;v78=v66[v70];v295=v78[2];v76[v295]=v76[v295](v76[v295 + 1 ]);v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v76[v78[3]] * v76[v78[4]] ;v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v76[v78[3]] + v76[v78[4]] ;v70=v70 + 1 ;v78=v66[v70];do return v76[v78[2]];end v70=v70 + 1 ;v78=v66[v70];do return;end else v76[v78[2]]=v78[3] * v76[v78[4]] ;end elseif (v79<=64) then if (v79>63) then if (v76[v78[2]]==v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end else v76[v78[2]]=v76[v78[3]][v78[4]];end elseif (v79<=65) then local v305;local v306,v307;local v308;v76[v78[2]]=v76[v78[3]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v60[v78[3]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v308=v78[2];v306,v307=v69(v76[v308](v13(v76,v308 + 1 ,v78[3])));v71=(v307 + v308) -1 ;v305=0;for v323=v308,v71 do v305=v305 + 1 ;v76[v323]=v306[v305];end v70=v70 + 1 ;v78=v66[v70];v308=v78[2];v76[v308](v13(v76,v308 + 1 ,v71));v70=v70 + 1 ;v78=v66[v70];v70=v78[3];elseif (v79==66) then v76[v78[2]]=v76[v78[3]] + v76[v78[4]] ;else v76[v78[2]]=v76[v78[3]]/v78[4] ;end v70=v70 + 1 ;break;end if (0==v87) then v78=v66[v70];v79=v78[1];v87=1;end end end end;end return v29(v28(),{},v17)(...);end return v15("LOL!",v9(),...);