Settings = ac.storage({
	KeyValue = 999, --–∑–Ω–∞—á–µ–Ω–∏–µ –∫–ª–∞–≤–∏—à–∏ –¥–ª—è ac
	KeyName = "", --–Ω–∞–∑–≤–∞–Ω–∏–µ –∫–ª–∞–≤–∏—à–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	TPtoCam = false,
	ShowKeyTP = false,
	tpDistance = 8,
	SpectatePlayer = false,
})

local timer = {
	running = 0,	--–ø–µ—Ä–µ–Ω–æ—Å–∏–º length/blength —Å—é–¥–∞
	length = 0,		--–æ–±—ã—á–Ω–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–æ—Å–ª–µ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏
	blength = 0.5,	--–¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏
}

--#region [–ú–µ–Ω—é]
local function Teleportation()
	--–æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–∞–π–º–µ—Ä–∞ –∑–¥–µ—Å—å –∫–∞–∂–µ—Ç—Å—è –ª–æ–≥–∏—á–Ω—ã–º
	ui.text("–ü–µ—Ä–µ–∑–∞—Ä—è–¥–∫–∞: " .. math.round(timer.running, 1))

	ui.tabBar("Atabbar", function()
		ui.tabItem("–ú–∞—à–∏–Ω–∞ –∫ –∫–∞–º–µ—Ä–µ", KeybindTP_UI)
		ui.tabItem("–ö–∞—Ä—Ç–∞", MapTest)
		ui.tabItem("–¢–µ–ª–µ–ø–æ—Ä—Ç –∫ –∏–≥—Ä–æ–∫—É", function()
			ui.text('–í—ã–±—Ä–∞—Ç—å –∏–≥—Ä–æ–∫–∞ –¥–ª—è —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞:')
			ui.childWindow('##drivers', vec2(ui.availableSpaceX(), 120), function ()
				for i = 1, sim.carsCount - 1 do
					local car = ac.getCar(i)
					local driverName = ac.getDriverName(i)
					if car.isConnected and not car.isAIControlled and not string.find(driverName, "Traffic") then
						if ui.selectable(driverName, selectedCar == car) then
							selectedCar = car
						end
					end
				end
			end)
			if ui.button("–¢–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è", vec2(ui.availableSpaceX(), 25)) and selectedCar then
				-- –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å–∫–æ—Ä–æ—Å—Ç—å –∏–∑ –º/—Å –≤ –∫–º/—á (1 –º/—Å = 3.6 –∫–º/—á)
				local speedKmh = selectedCar.velocity:length() * 3.6
				if speedKmh > 40 then
					ac.setMessage("–ù–µ–ª—å–∑—è —Ç–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –∫ –∏–≥—Ä–æ–∫—É!", "–î–ª—è —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞ –∏–≥—Ä–æ–∫ –¥–æ–ª–∂–µ–Ω –µ—Ö–∞—Ç—å –Ω–µ –±–æ–ª–µ–µ 40 –∫–º/—á!")
				else
					local dir = selectedCar.look
					physics.setCarVelocity(0, vec3(0, 0, 0))
					physics.setCarPosition(0, selectedCar.position + vec3(0, 0.1, 0) - dir * 8, -dir)
				end
			end
		end)
	end)
end
--#endregion

--#region [–¢–µ–ª–µ–ø–æ—Ä—Ç –∫ –∫–∞–º–µ—Ä–µ]

function KeybindTP_UI() --–ø–µ—Ä–≤–∞—è –≤–∫–ª–∞–¥–∫–∞
	ui.text("–¢–µ–ª–µ–ø–æ—Ä—Ç –∫ –∫–∞–º–µ—Ä–µ")

	if ui.checkbox("–í–∫–ª—é—á–∏—Ç—å", Settings.TPtoCam) then
		Settings.TPtoCam = not Settings.TPtoCam
	end

	local distanceslider , tpbool = ui.slider("###tpdist", Settings.tpDistance, 0, 20, "–î–∏—Å—Ç–∞–Ω—Ü–∏—è —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞: %.0f –º–µ—Ç—Ä–æ–≤", 1)
	if tpbool then
		Settings.tpDistance = distanceslider
	end

	if ui.checkbox("–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –º–µ—Å—Ç–æ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞ –ø—Ä–∏ —É–¥–µ—Ä–∂–∞–Ω–∏–∏ –∫–Ω–æ–ø–∫–∏", Settings.ShowKeyTP) then
		Settings.ShowKeyTP = not Settings.ShowKeyTP
	end

	--–ö–Ω–æ–ø–∫–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–ª–∞–≤–∏—à–∏ –∏ –Ω–∞—á–∞–ª–æ –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è –∫–ª–∞–≤–∏—à
	if
		ui.button(
			Settings.KeyValue == 0 and "–ù–∞–∂–º–∏—Ç–µ –∫–ª–∞–≤–∏—à—É."
			or (Settings.KeyValue == 999 and "–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –∫–ª–∞–≤–∏—à—É" 
			or (Settings.KeyValue >= 1 and "–í—ã–±—Ä–∞–Ω–Ω–∞—è –∫–ª–∞–≤–∏—à–∞: " .. Settings.KeyName)))
	then
		Settings.KeyValue = 0
	end
	ui.sameLine() --–¥–µ–ª–∞–µ—Ç üîºüîΩ –Ω–∞ –æ–¥–Ω–æ–π –ª–∏–Ω–∏–∏
	--–°–±—Ä–æ—Å –∫–ª–∞–≤–∏—à–∏
	if ui.button("–°–±—Ä–æ—Å–∏—Ç—å –∫–ª–∞–≤–∏—à—É") then
		Settings.KeyValue = 999
		Settings.KeyName = "null"
	end
	--–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–∞–π–º–µ—Ä –ø–µ—Ä–µ–∑–∞—Ä—è–¥–∫–∏ —á–µ—Ä–µ–∑ script.drawUI
	if ui.checkbox("–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø–µ—Ä–µ–∑–∞—Ä—è–¥–∫—É –∏ –∫–ª–∞–≤–∏—à—É", OverlayTimerKey) then
		OverlayTimerKey = not OverlayTimerKey
	end

	--–ù–∞—á–∏–Ω–∞–µ—Ç –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏–µ –∫–ª–∞–≤–∏—à –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏
	if Settings.KeyValue == 0 then
		for key, value in pairs(ui.KeyIndex) do -- –Ω—É–∂–Ω–æ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è, –∫–∞–∫ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫—É –¥—Ä—É–≥–∏—Ö –≤—Ö–æ–¥–æ–≤, –≤–æ–∑–º–æ–∂–Ω–æ, –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è —Ä—É—á–Ω–æ–π –≤—ã–±–æ—Ä
			if ui.keyboardButtonDown(value) then
				if timer.running <= 0.5 then
					timer.running = timer.blength
				else
				end --–∞–Ω—Ç–∏-–æ–±—Ö–æ–¥ "–ø–µ—Ä–µ–∑–∞—Ä—è–¥–∫–∏" LOL
				Settings.KeyValue = value
				Settings.KeyName = tostring(key)
			end
		end
	end
end

function TPtoCam_Update()
	if Settings.TPtoCam == true and Settings.KeyValue ~= 999 then
		if ui.keyboardButtonReleased(Settings.KeyValue) and timer.running <= 0 then
			local teleportPoint = ac.getCameraPosition()
			local TeleportAngle = ac.getCameraForward()
			physics.setCarVelocity(0, vec3(0, 0, 0))
			physics.setCarPosition(0, teleportPoint + vec3(0,-1,0) + TeleportAngle * Settings.tpDistance, -TeleportAngle * vec3(1,0,1))
			timer.running = timer.length
		end
	end
end

function TPtoCam_draw3D()
	if Settings.TPtoCam == true then
		if Settings.ShowKeyTP and ui.keyboardButtonDown(Settings.KeyValue) then
			render.setBlendMode(render.BlendMode.Opaque)
			render.setCullMode(render.CullMode.Wireframe)
			render.setDepthMode(render.DepthMode.ReadOnlyLessEqual)
			local campos = ac.getCameraPosition():clone()
			local camlook = ac.getCameraForward():clone():normalize()
			local camside = ac.getCameraSide():clone()
			campos:set(vec3(campos + vec3(0,-1,0) + camlook * Settings.tpDistance))
	
			local FrontBack = vec3()
			local Sides = vec3()
			local Top_Left = vec3()
			local Top_Right = vec3()
			local Rear_Left = vec3()
			local Rear_Right= vec3()
			local LookArrow = vec3()
	
			FrontBack	:set((camlook):mul(vec3(1, 0, 1))):scale(ac.getCar(0).aabbSize.x):normalize():scale(1.75)
			Sides		:set(camside):scale(ac.getCar(0).aabbSize.x):scale(0.5)
			Top_Left	:set(campos):add( FrontBack - Sides)
			Top_Right	:set(campos):add( FrontBack + Sides)
			Rear_Left	:set(campos):add(-FrontBack - Sides)
			Rear_Right	:set(campos):add(-FrontBack + Sides)
			render.debugLine(Top_Left,Top_Right,rgbm(1, 1, 1, 1))
			render.debugLine(Rear_Left,Rear_Right,rgbm(1, 1, 1, 1))
			render.debugLine(Top_Left,Rear_Left,rgbm(1, 1, 1, 1))
			render.debugLine(Top_Right,Rear_Right,rgbm(1, 1, 1, 1))
			render.debugLine(Top_Left, Rear_Right, rgbm(1, 1, 1, 1))
			render.debugLine(Top_Right, Rear_Left, rgbm(1, 1, 1, 1))
	
			LookArrow:set(camlook):mul(vec3(1,0,1)):normalize():scale(2.5)
			render.debugArrow(campos+vec3(0,1,0),campos,rgbm(1, 1, 1, 1),2)
			render.debugArrow(campos,campos+LookArrow,rgbm(1, 1, 1, 1),2)
		end
	end
end
--#endregion

local selectedCar = nil ---@type ac.StateCar

--#region [–ö–∞—Ä—Ç–∞, —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω–æ –∏ –Ω–µ—Å—Ç–∞–±–∏–ª—å–Ω–æ]
local mapstuff = {}
local pos3, dir3, pos2, dir2, dir2x = vec3(), vec3(), vec2(), vec2(), vec2()
local padding = vec2(30*3, 50*3)
local offsets = -padding * 0.5
local ts = 10
local first = true

if ac.getPatchVersionCode() >= 2000 then
	map = ac.getFolder(ac.FolderID.ContentTracks) .. '/' .. ac.getTrackFullID('/') .. '/map.png'
	current_map = map
	ui.decodeImage(map)

	--ini stuff size
	ini = ac.getFolder(ac.FolderID.ContentTracks) .. "/" .. ac.getTrackFullID("/") .. "/data/map.ini"
	for a, b in ac.INIConfig.load(ini):serialize():gmatch("([_%a]+)=([-%d.]+)") do -- ‚óÄ —è –Ω–µ –ø–æ–Ω–∏–º–∞—é "([_%a]+)=([-%d.]+)"
		mapstuff[a] = tonumber(b)
	end
	image_size = ui.imageSize(map)
	config_offset = vec2(mapstuff.X_OFFSET, mapstuff.Z_OFFSET)
end

function MapTest()
	ui.text([[
–ù–∞–∂–º–∏—Ç–µ –ü—Ä–æ–±–µ–ª –Ω–∞ –∫–∞—Ä—Ç–µ, —á—Ç–æ–±—ã —Ç–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–∞–º–µ—Ä—É | –í—ã –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–º–µ—â–∞—Ç—å –∏ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞—Ç—å –∫–∞—Ä—Ç—É. (–ø–æ–ª–Ω–æ–µ –æ—Ç–¥–∞–ª–µ–Ω–∏–µ –º–æ–∂–µ—Ç –≤—ã–∑–≤–∞—Ç—å –±–∞–≥–∏)
–ó–µ–ª–µ–Ω—ã–π = –ö–∞–º–µ—Ä–∞/–í—ã
–ö—Ä–∞—Å–Ω—ã–π = –¥—Ä—É–≥–∏–µ –∏–≥—Ä–æ–∫–∏.]])
	ui.childWindow("##mapforcamera", vec2(ui.availableSpaceX(), ui.availableSpaceY()),
	function()
		if ac.getPatchVersionCode() < 2000 then ui.text("—Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –Ω–∞ –≤–µ—Ä—Å–∏–∏ –≤—ã—à–µ 2000") return end

		if first then --—É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–∞—Å—à—Ç–∞–± –∫–∞—Ä—Ç—ã, –µ—Å–ª–∏ –Ω–µ –∑–¥–µ—Å—å, –æ–Ω —Å–æ—Ö—Ä–∞–Ω–∏—Ç —Ä–∞–∑–º–µ—Ä –∏ –Ω–µ –±—É–¥–µ—Ç –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞—Ç—å—Å—è —Å –∫–æ–ª–µ—Å–æ–º –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
			map_scale = math.min((ui.windowWidth() - padding.x) / image_size.x, (ui.windowHeight() - padding.y) / image_size.y)
			config_scale = map_scale / mapstuff.SCALE_FACTOR
			size = image_size * map_scale
			if ui.isImageReady(current_map) then
				first = false
			end
		end

		ui.drawImage(current_map, -offsets, -offsets + size)

		if ui.windowHovered() then --–º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ
			if ac.getUI().mouseWheel ~= 0 then
			  if 
			  (	ac.getUI().mouseWheel < 0 and (size.x + padding.x > ui.windowWidth() and size.y + padding.y > ui.windowHeight())) 
				or ac.getUI().mouseWheel > 0 then
				local old = size
				map_scale = map_scale * (1 + ac.getUI().mouseWheel * 0.15)
				size = ui.imageSize(current_map) * map_scale
				config_scale = map_scale / mapstuff.SCALE_FACTOR
				offsets = (offsets + (size - old) * (offsets + ui.mouseLocalPos()) / old)
			  else
				offsets = -padding * 0.5
				map_scale = math.min((ui.windowWidth() - padding.x) / image_size.x,(ui.windowHeight() - padding.y) / image_size.y)
				size = ui.imageSize(current_map) * map_scale
				config_scale = map_scale / mapstuff.SCALE_FACTOR
			  end
			end
		  end

		--–ø–æ–∑–∏—Ü–∏–∏ –¥—Ä—É–≥–∏—Ö –∏–≥—Ä–æ–∫–æ–≤
		for i = ac.getSim().carsCount - 1, 1, -1 do --—Ä–∏—Å—É–µ–º –æ–±—ä–µ–∫—Ç—ã –Ω–∞ –∫–∞—Ä—Ç–µ
			local car = ac.getCar(i)
			if car.isConnected and (not car.isHidingLabels) then
				local pos3 = car.position
				local dir3 = car.look

				pos2:set(pos3.x, pos3.z):add(config_offset):scale(config_scale):add(-offsets)
				dir2:set(dir3.x, dir3.z) -- = vec2(dir3.x, dir3.z)
				dir2x:set(dir3.z, -dir3.x)
				ui.drawTriangleFilled(
					pos2 + dir2 * ts,
					pos2 - dir2 * ts - dir2x * ts * 0.75,
					pos2 - dir2 * ts + dir2x * ts * 0.75,
					rgbm(255,0,0,255))
				ui.dwriteDrawText(ac.getDriverName(i),10,pos2 + vec2(25,5) - ui.measureText(ac.getDriverName(i)) * 0.5,rgbm.colors.white)
			end
		end

		--–ø–æ–∑–∏—Ü–∏—è –∫–∞–º–µ—Ä—ã –∏ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞
		pos3 = ac.getCameraPosition()
		pos2:set(pos3.x, pos3.z):add(config_offset):scale(config_scale):add(-offsets)
		dir3 = ac.getCameraForward()
		dir2 = vec2(dir3.x, dir3.z):normalize()
		dir2x:set(dir3.z, -dir3.x):normalize()
		ui.drawTriangleFilled(
			pos2 + dir2 * ts,
			pos2 - dir2 * ts - dir2x * ts * 0.75,
			pos2 - dir2 * ts + dir2x * ts * 0.75,
			rgbm(0, 255, 0, 255))
		if ui.keyPressed(ui.Key.Space) and ui.windowHovered() then
			local camerapos = (ui.mouseLocalPos() + offsets) / config_scale - config_offset
			local raycast = physics.raycastTrack(vec3(camerapos.x, 2000, camerapos.y), vec3(0, -1, 0), 3000)
			local cameraheight = 2000 - raycast + 3
			if raycast ~= -1 then
				ac.setCurrentCamera(ac.CameraMode.Free)
				ac.setCameraPosition(vec3(camerapos.x, cameraheight, camerapos.y))
			end
		end

		ui.invisibleButton('###mapforcamera4242', ui.windowSize())
		if ui.mouseDown() and ui.itemHovered() then offsets = offsets - ui.mouseDelta() end
	end)
end
--endregion

function script.update(dt)
	--#region [–¢–∞–π–º–µ—Ä]
	if timer.running >= 0 then -- —Ç–∞–π–º–µ—Ä –¥–ª—è —á–µ–≥–æ —É–≥–æ–¥–Ω–æ
		timer.running = timer.running - dt
	end
	--#endregion

	--#region[–§—É–Ω–∫—Ü–∏–∏]
	TPtoCam_Update()
	--#endregion
end

function script.drawUI()
	if OverlayTimerKey == true then
		ui.transparentWindow("Keyandabindandacooldown", vec2(-15, -5), vec2(150, 150), false, function()
			ui.text("–ö–ª–∞–≤–∏—à–∞: " .. Settings.KeyName .. "\n–ü–µ—Ä–µ–∑–∞—Ä—è–¥–∫–∞: " .. math.round(timer.running, 1))
		end)
	end
end

function script.draw3D()
end

ui.registerOnlineExtra(	ui.Icons.Compass,
						"–¢–µ–ª–µ–ø–æ—Ä—Ç –º–µ–Ω—é",
						nil,
						Teleportation,
						nil,
						ui.OnlineExtraFlags.Tool,
						ui.WindowFlags.NoScrollWithMouse)